import { useState } from 'react';

/**
 * Custom hook for managing confirmation modals
 * @returns {object} - Object containing modal state and control functions
 */
export const useConfirmation = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [config, setConfig] = useState({
    title: "X√°c nh·∫≠n",
    message: "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën th·ª±c hi·ªán h√†nh ƒë·ªông n√†y?",
    confirmText: "X√°c nh·∫≠n",
    cancelText: "H·ªßy",
    type: "warning",
    icon: null,
    onConfirm: () => {}
  });
  const [loading, setLoading] = useState(false);

  /**
   * Show confirmation modal
   * @param {object} options - Modal configuration options
   */
  const showConfirmation = (options = {}) => {
    setConfig({
      title: options.title || "X√°c nh·∫≠n",
      message: options.message || "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën th·ª±c hi·ªán h√†nh ƒë·ªông n√†y?",
      confirmText: options.confirmText || "X√°c nh·∫≠n",
      cancelText: options.cancelText || "H·ªßy",
      type: options.type || "warning",
      icon: options.icon || null,
      onConfirm: options.onConfirm || (() => {})
    });
    setIsOpen(true);
    setLoading(false);
  };

  /**
   * Hide confirmation modal
   */
  const hideConfirmation = () => {
    setIsOpen(false);
    setLoading(false);
  };

  /**
   * Handle confirmation action
   */
  const handleConfirm = async () => {
    try {
      setLoading(true);
      await config.onConfirm();
    } catch (error) {
      console.error('Confirmation action failed:', error);
    } finally {
      setLoading(false);
      hideConfirmation();
    }
  };

  // Predefined confirmation types for common use cases
  const confirmDelete = (itemName, onConfirm) => {
    showConfirmation({
      title: "X√≥a d·ªØ li·ªáu",
      message: `B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a "${itemName}"? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c.`,
      confirmText: "X√≥a",
      cancelText: "H·ªßy",
      type: "danger",
      icon: "üóëÔ∏è",
      onConfirm
    });
  };

  const confirmRemove = (itemName, onConfirm) => {
    showConfirmation({
      title: "Lo·∫°i b·ªè",
      message: `B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën lo·∫°i b·ªè "${itemName}" kh·ªèi danh s√°ch?`,
      confirmText: "Lo·∫°i b·ªè",
      cancelText: "H·ªßy",
      type: "warning",
      icon: "‚ö†Ô∏è",
      onConfirm
    });
  };

  const confirmSave = (onConfirm) => {
    showConfirmation({
      title: "L∆∞u thay ƒë·ªïi",
      message: "B·∫°n c√≥ mu·ªën l∆∞u c√°c thay ƒë·ªïi ƒë√£ th·ª±c hi·ªán?",
      confirmText: "L∆∞u",
      cancelText: "H·ªßy",
      type: "success",
      icon: "üíæ",
      onConfirm
    });
  };

  const confirmAction = (actionName, onConfirm) => {
    showConfirmation({
      title: "X√°c nh·∫≠n h√†nh ƒë·ªông",
      message: `B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ${actionName}?`,
      confirmText: "Th·ª±c hi·ªán",
      cancelText: "H·ªßy",
      type: "info",
      icon: "‚ÑπÔ∏è",
      onConfirm
    });
  };

  return {
    // Modal state
    isOpen,
    config,
    loading,
    
    // Control functions
    showConfirmation,
    hideConfirmation,
    handleConfirm,
    
    // Predefined confirmations
    confirmDelete,
    confirmRemove,
    confirmSave,
    confirmAction
  };
};
